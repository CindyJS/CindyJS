/* CindyJS - (C) 2014-2016  The CindyJS Project
 * IFS rendering subcomponent licensed under the Apache License 2.0.
 * See https://github.com/CindyJS/CindyJS/tree/$gitid$/src/js/ifs
 * for corresponding sources.
 */
var nextInit = null;
var asm = null;
var buffer = null;
var imgData = null;
var Module = {};
var generation = null;

// check for imul support, and also for correctness
// ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math.imul || Math.imul(0xffffffff, 5) !== -5)
    Math.imul = function imul(a, b) {
        var ah  = a >>> 16;
        var al = a & 0xffff;
        var bh  = b >>> 16;
        var bl = b & 0xffff;
        return (al*bl + ((ah*bl + al*bh) << 16))|0;
    };

onmessage = function(event) {
    var d = event.data;
    if (d.cmd === "init") {
        nextInit = d;
        if (generation === null) {
            next();
        }
    }
    if (d.cmd === "next")
        next();
}

function init(d) {
    generation = d.generation;
    var n = d.trafos.length;
    var imgSize = d.width * d.height * 4;
    var trafoSize = (112 + 4) * n;
    if (trafoSize % 8) trafoSize += 8 - (trafoSize % 8);
    var bufferSize = 96 + trafoSize + imgSize;
    if (asm === null || buffer.byteLength < bufferSize) {
        buffer = new ArrayBuffer(bufferSize);
        asm = Module.asm(self, {
            _dbglog: function(i, d) {
                console.log(i, d);
            }
        }, buffer);
    }
    var imgPtr = asm._init(n, d.width, d.height);
    if (bufferSize !== imgPtr + imgSize)
        throw Error("Buffer size calculation out of sync.");
    var imgBytes = new Uint8ClampedArray(buffer, imgPtr);
    imgBytes.fill(0); // clear image
    imgData = new ImageData(imgBytes, d.width, d.height);
    for (var i = 0; i < n; ++i) {
        var tr = d.trafos[i];
        if (tr.kind === "Mt") {
            asm._setMoebius(
                i, tr.prob,
                tr.color[0] * 255,
                tr.color[1] * 255,
                tr.color[2] * 255,
                tr.moebius.sign,
                tr.moebius.ar,
                tr.moebius.ai,
                tr.moebius.br,
                tr.moebius.bi,
                tr.moebius.cr,
                tr.moebius.ci,
                tr.moebius.dr,
                tr.moebius.di);
        }
    }
    asm._real(1000, 1);
}

function next() {
    if (nextInit) {
        init(nextInit);
        nextInit = null;
    }
    asm._real(1e5, 0);
    createImageBitmap(imgData).then(function(bmp) {
        postMessage({
            generation: generation,
            img: bmp
        }, [bmp]);
    });
}

// Code below was generated by emscripten, see ifs.cc for source code
