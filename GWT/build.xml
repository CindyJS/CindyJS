<?xml version="1.0" encoding="UTF-8"?>
<project name="CindyJS-GWT" default="build">

  <description>CindyJS components compiled by GWT</description>

  <property file="local.properties"/>

  <property name="cjs.gwt.version" value="2.6.1"/>

  <property name="dl.dir.arch" value="../download/arch"/>
  <property name="cjs.gwt.dir" value="../download/gwt"/>
  <property name="cjs.src.dir" value="../src/java"/>
  <property name="cjs.module" value="quickhull3d"/>

  <target name="get.check" unless="get.force">
    <available property="get.unneeded" file="${cjs.gwt.dir}/gwt-user.jar"/>
  </target>
  <target name="get" depends="get.check" unless="get.unneeded">
    <property name="cjs.gwt.urlbase"
              value="http://storage.googleapis.com/gwt-releases"/>
    <property name="cjs.gwt.zip" value="gwt-${cjs.gwt.version}.zip"/>
    <property name="cjs.gwt.url" value="${cjs.gwt.urlbase}/${cjs.gwt.zip}"/>
    <mkdir dir="${dl.dir.arch}"/>
    <get src="${cjs.gwt.url}" dest="${dl.dir.arch}/${cjs.gwt.zip}"
         skipexisting="true"/>
    <delete dir="${cjs.gwt.dir}" quiet="true"/>
    <mkdir dir="${cjs.gwt.dir}"/>
    <unzip src="${dl.dir.arch}/${cjs.gwt.zip}" dest="${cjs.gwt.dir}"/>
    <move todir="${cjs.gwt.dir}">
      <fileset dir="${cjs.gwt.dir}"/>
      <cutdirsmapper dirs="1"/>
    </move>
  </target>

  <!-- ================================================================== -->
  <!-- Content below is based on a build file generated by webAppCreator. -->
  <!-- ================================================================== -->
  
  <!-- Arguments to gwtc and devmode targets -->
  <property name="gwt.args" value="" />

  <!-- Configure path to GWT SDK -->
  <property name="gwt.sdk" location="${cjs.gwt.dir}" />

  <target name="init" depends="get">
    <path id="project.class.path">
      <pathelement location="war/WEB-INF/classes"/>
      <pathelement location="${gwt.sdk}/gwt-user.jar"/>
      <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
      <!-- Add any additional non-server libs (such as JUnit) -->
      <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
    </path>
  </target>

  <target name="libs" depends="get" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
    <!-- Add any additional server libs that need to be copied -->
  </target>

  <target name="javac" depends="init,libs" description="Compile java source to bytecode">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="${cjs.src.dir}" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.5" target="1.5" nowarn="true"
        includeantruntime="false"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="${cjs.src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="comparedate" depends="javac" unless="gwtc.forcerun">
    <condition property="isuptodate">
      <and>
        <uptodate targetfile="war/${cjs.module}/${cjs.module}.nocache.js">
          <srcfiles dir="war/WEB-INF/classes/cindyjs/${cjs.module}"/>
        </uptodate>
      </and>
    </condition>
  </target>

  <target name="gwtc" depends="comparedate" unless="isuptodate"
          description="GWT compile to JavaScript (production mode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="${cjs.src.dir}"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx256M"/>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="cindyjs.${cjs.module}"/>
    </java>
  </target>

  <target name="devmode" depends="javac" description="Run development mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="${cjs.src.dir}"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="-startupUrl"/>
      <arg value="${cjs.module}.html"/>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="cindyjs.${cjs.module}"/>
    </java>
  </target>

  <target name="superdevmode" depends="javac" description="Run Super Dev Mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.codeserver.CodeServer">
      <classpath>
        <pathelement location="${cjs.src.dir}"/>
        <pathelement location="${gwt.sdk}/gwt-codeserver.jar" />
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="cindyjs.${cjs.module}"/>
    </java>
  </target>

<!--
Test targets suppressed because -junit argument was not specified when running webAppCreator.

  <target name="javac.tests" depends="javac" description="Compiles test code">
    <javac srcdir="test" includes="**" encoding="utf-8"
      source="1.5" target="1.5" nowarn="true"
      destdir="war/WEB-INF/classes"
      debug="true" debuglevel="lines,vars,source">
      <classpath location="path_to_the_junit_jar"/>
      <classpath refid="project.class.path"/>
    </javac>
  </target>
  
  <target name="test.dev" depends="javac.tests" description="Run development mode tests">
    <mkdir dir="reports/htmlunit.dev" />
    <junit fork="yes" printsummary="yes" haltonfailure="yes">
      <jvmarg line="-Xmx256m" />
      <sysproperty key="gwt.args" value="-standardsMode -logLevel WARN" />
      <sysproperty key="java.awt.headless" value="true" />
      <classpath>
        <pathelement location="${cjs.src.dir}" />
        <pathelement location="test" />
        <path refid="project.class.path" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
        <pathelement location="path_to_the_junit_jar" />
      </classpath>
      <batchtest todir="reports/htmlunit.dev" >
        <fileset dir="test" >
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="plain" />
      <formatter type="xml" />
    </junit>
  </target>

  <target name="test.prod" depends="javac.tests" description="Run production mode tests">
    <mkdir dir="reports/htmlunit.prod" />
    <junit fork="yes" printsummary="yes" haltonfailure="yes">
      <jvmarg line="-Xmx256m" />
      <sysproperty key="gwt.args" value="-prod -standardsMode -logLevel WARN -standardsMode -war www-test" />
      <sysproperty key="java.awt.headless" value="true" />
      <classpath>
        <pathelement location="${cjs.src.dir}" />
        <pathelement location="test" />
        <path refid="project.class.path" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
        <pathelement location="path_to_the_junit_jar" />
      </classpath>
      <batchtest todir="reports/htmlunit.prod" >
        <fileset dir="test" >
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="plain" />
      <formatter type="xml" />
    </junit>
  </target>

  <target name="test" description="Run development and production mode tests">
    <antcall target="test.dev" />
    <antcall target="test.prod" />
  </target>
-->

  <target name="hosted" depends="devmode" description="Run development mode (NOTE: the 'hosted' target is deprecated)" />

  <target name="build" depends="gwtc" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="CindyJsGwt.war" basedir="war"/>
  </target>

  <target name="clean" description="Cleans this project">
    <delete>
      <fileset dir="war">
        <exclude name="*.html"/>
      </fileset>
      <dirset dir="war"/>
    </delete>
  </target>

</project>
